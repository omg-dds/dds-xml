<?xml version="1.0" encoding="UTF-8"?>

<!-- This file contains the XML Schema Document (XSD) for the XML Types
     Representation defined by the OMG specification "DDS Consolidated XML
     Syntax" (DDS-XML). -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">

    <!-- ================================================================== -->
    <!-- Identifiers -->
    <!-- ================================================================== -->

    <xs:simpleType name="identifierName">
        <xs:restriction base="xs:string">
            <xs:pattern value="([a-zA-Z]|::)([a-zA-Z_0-9]|::)*" />
        </xs:restriction>
    </xs:simpleType>


    <!-- ================================================================== -->
    <!-- File Inclusion -->
    <!-- ================================================================== -->

    <xs:simpleType name="fileName">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>


    <xs:complexType name="includeDecl">
        <xs:attribute name="file" type="fileName" use="required" />
    </xs:complexType>


    <!-- ================================================================== -->
    <!-- Forward Declarations -->
    <!-- ================================================================== -->

    <xs:simpleType name="forwardDeclTypeKind">
        <xs:restriction base="xs:string">
            <xs:enumeration value="enum" />
            <xs:enumeration value="struct" />
            <xs:enumeration value="union" />
            <xs:enumeration value="bitmask" />
        </xs:restriction>
    </xs:simpleType>


    <xs:complexType name="forwardDecl">
        <xs:attribute name="name" type="identifierName" use="required" />
        <xs:attribute name="kind" type="forwardDeclTypeKind" use="required" />
    </xs:complexType>


    <!-- ================================================================== -->
    <!-- Basic Types -->
    <!-- ================================================================== -->

    <xs:simpleType name="allUnionDiscriminatorTypeKind">
        <xs:restriction base="xs:string">
            <!-- Primitive Types -->
            <xs:enumeration value="boolean" />
            <xs:enumeration value="byte" />
            <xs:enumeration value="char8" />
            <xs:enumeration value="char16" />
            <xs:enumeration value="int16" />
            <xs:enumeration value="uint16" />
            <xs:enumeration value="int32" />
            <xs:enumeration value="uint32" />
            <xs:enumeration value="int64" />
            <xs:enumeration value="uint64" />

            <!-- Alias to other type -->
            <xs:enumeration value="aliasType" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="allMapKeyTypeKind">
        <xs:restriction base="xs:string">
            <!-- Primitive Types -->
            <xs:enumeration value="byte" />
            <xs:enumeration value="char8" />
            <xs:enumeration value="char16" />
            <xs:enumeration value="int16" />
            <xs:enumeration value="uint16" />
            <xs:enumeration value="int32" />
            <xs:enumeration value="uint32" />
            <xs:enumeration value="int64" />
            <xs:enumeration value="uint64" />

            <!-- String containers -->
            <xs:enumeration value="string" />
            <xs:enumeration value="wstring" />

            <!-- Alias to other type -->
            <xs:enumeration value="aliasType" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="allTypeKind">
        <xs:restriction base="xs:string">
            <!-- Primitive Types -->
            <xs:enumeration value="boolean" />
            <xs:enumeration value="byte" />
            <xs:enumeration value="char8" />
            <xs:enumeration value="char16" />
            <xs:enumeration value="int16" />
            <xs:enumeration value="uint16" />
            <xs:enumeration value="int32" />
            <xs:enumeration value="uint32" />
            <xs:enumeration value="int64" />
            <xs:enumeration value="uint64" />

            <xs:enumeration value="float32" />
            <xs:enumeration value="float64" />
            <xs:enumeration value="float128" />

            <!-- String containers -->
            <xs:enumeration value="string" />
            <xs:enumeration value="wstring" />

            <!-- Some other type -->
            <xs:enumeration value="nonBasic" />
        </xs:restriction>
    </xs:simpleType>


    <xs:simpleType name="arrayDimensionsKind">
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>

    <!-- ================================================================== -->
    <!-- Common Member Attributes -->
    <!-- ================================================================== -->
    <xs:attributeGroup name="commonElementAttributes">
        <xs:attribute name="type" type="allTypeKind" 
                use="required" />
        <xs:attribute name="nonBasicTypeName" type="identifierName" 
                use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="annotationElementAttributes">
        <xs:attributeGroup ref="commonElementAttributes"/>
        <xs:attribute name="default" type="xs:string"
                use="optional" />
    </xs:attributeGroup>    

    <xs:attributeGroup name="constantElementAttributes">
        <xs:attributeGroup ref="commonElementAttributes"/>

        <xs:attribute name="unit" type="xs:string" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="exceptionElementAttributes">
        <xs:attributeGroup ref="constantElementAttributes"/>

        <xs:attribute name="stringMaxLength" type="xs:string" 
                use="optional" />
        <xs:attribute name="sequenceMaxLength" type="xs:string"
                use="optional" />
        <xs:attribute name="arrayDimensions" type="arrayDimensionsKind"
                use="optional" />                            
        <xs:attribute name="mapKeyType" type="allMapKeyTypeKind" 
                use="optional" />
        <xs:attribute name="mapKeyAliasTypeName" type="identifierName"
                use="optional" />
        <xs:attribute name="mapKeyStringMaxLength" type="xs:string"
                use="optional" />
        <xs:attribute name="mapMaxLength" type="xs:string" 
                use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="typedefElementAttributes">
        <xs:attributeGroup ref="exceptionElementAttributes"/>

        <xs:attribute name="min" type="xs:float" 
            use="optional" />
        <xs:attribute name="max" type="xs:float" 
            use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="commonMemberElementAttributes">

        <xs:attributeGroup ref="typedefElementAttributes"/>

        <xs:attribute name="optional" type="xs:boolean"  
                use="optional" default="true" />
        <xs:attribute name="tryConstruct" type="tryConstructKind" 
                use="optional" default="use_default" />
        <xs:attribute name="mustUnderstand" type="xs:boolean"
                use="optional" default="true" />
        <xs:attribute name="nonSerialized" type="xs:boolean"
                use="optional" default="true" />
    </xs:attributeGroup>

    <xs:attributeGroup name="unionMemberAttributes">
        <xs:attributeGroup ref="commonMemberElementAttributes"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="structMemberAttributes">
        <xs:attributeGroup ref="commonMemberElementAttributes"/>
        <xs:attribute name="key" type="xs:boolean" use="optional"
                default="true" />
        <xs:attribute name="id" type="memberId" 
                use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="operationArgumentAttributes">
        <xs:attributeGroup ref="commonMemberElementAttributes"/>
        <xs:attribute name="id" type="memberId" 
                use="optional" />
        <xs:attribute name="direction" type="operationArgumentDirectionKind" 
                use="optional" default="in" />
    </xs:attributeGroup>

    <xs:attributeGroup name="unionTypeAttributes">
        <xs:attribute name="nested" type="xs:boolean" 
                use="optional"  default="false" />
        <xs:attribute name="extensibility" type="extensibilityKind"
                use="optional" default="append" />
        <xs:attribute name="autoid" type="autoIdKind" 
                use="optional"  default="hash" />
    </xs:attributeGroup>

    <xs:attributeGroup name="structTypeAttributes">
        <xs:attributeGroup ref="unionTypeAttributes"/>
        <xs:attribute name="baseType" type="identifierName"
                use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="interfaceTypeAttributes">
        <xs:attribute name="extensibility" type="extensibilityKind"
                use="optional" default="append" />
        <xs:attribute name="baseType" type="identifierName"
                use="optional" />
    </xs:attributeGroup>


    <!-- ================================================================== -->
    <!-- Constants -->
    <!-- ================================================================== -->

    <xs:complexType name="constDecl">
        <xs:complexContent>
            <xs:extension base="commonTypeDecl">
                <xs:attributeGroup ref="constantElementAttributes"/>
                <xs:attribute name="value" type="xs:string" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <!-- ================================================================== -->
    <!-- Aggregated Types (General) -->
    <!-- ================================================================== -->

    <xs:simpleType name="memberId">
        <xs:restriction base="xs:unsignedInt">
            <xs:minInclusive value="0" />
            <xs:maxInclusive value="268435455" /> <!-- 0x0FFFFFFF -->
        </xs:restriction>
    </xs:simpleType>

    <!-- Applies to annotation parameters -->
    <xs:complexType name="annotationMemberDecl">
        <!-- do not extend commonMemberDecl as we don't want to allow
            annotations within  annotation parameters -->
        <xs:sequence>
            <xs:element name="doc" type="docDecl" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    
        <xs:attribute name="name" type="identifierName" use="required" />
        <xs:attributeGroup ref="annotationElementAttributes"/>
    </xs:complexType>
    
    
    <!-- Applies to exception parameters -->
    <xs:complexType name="exceptionMemberDecl">
        <xs:complexContent>
            <xs:extension base="commonMemberDecl">
                <xs:attributeGroup ref="exceptionElementAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="tryConstructKind">
        <xs:restriction base="xs:string">
            <xs:enumeration value="discard" />
            <xs:enumeration value="use_default" />
            <xs:enumeration value="trim" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="verbatimDecl">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="language"  type="xs:string" use="optional"
                              default="*" />
                <xs:attribute name="placement" type="xs:string" use="optional" 
                              default="before-declaration" />           
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="extensibilityKind">
        <xs:restriction base="xs:string">
            <xs:enumeration value="final" />
            <xs:enumeration value="append" />
            <xs:enumeration value="mutable" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="autoIdKind">
        <xs:restriction base="xs:string">
            <xs:enumeration value="hash" />
            <xs:enumeration value="sequential" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="docDecl">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="format" type="xs:string" use="optional" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="licenseIdentifier">
        <xs:restriction base="xs:string">
            <xs:pattern value="([a-zA-Z])([-._0-9a-zA-Z])*" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="licenseUseIdentifier">
        <xs:restriction base="xs:string">
            <xs:pattern value="([a-zA-Z])([-._:0-9a-zA-Z])*" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="licenseDefinitionDecl">
        <xs:attribute name="name" type="licenseIdentifier"  use="required" />
        <xs:attribute name="link" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name="licenseUseDecl">
        <xs:attribute name="use_name" type="licenseUseIdentifier" use="required" />
        <xs:attribute name="license_definition" type="licenseIdentifier" use="required"/>
        <xs:attribute name="link" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="typeAnnotationList">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="doc" type="docDecl" minOccurs="0" maxOccurs="1"/>
            <xs:element name="verbatim" type="verbatimDecl" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="custom" type="appliedAnnotation" minOccurs="0" maxOccurs="unbounded" />
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="memberAnnotationList">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="doc" type="docDecl" minOccurs="0" maxOccurs="1"/>
            <xs:element name="verbatim" type="verbatimDecl" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="custom" type="appliedAnnotation" minOccurs="0" maxOccurs="unbounded" />
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="commonTypeDecl">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:element name="annotations" type="typeAnnotationList" />
        </xs:sequence>
        <xs:attribute name="name" type="identifierName" use="required" />
        <xs:attribute name="license_use" type="licenseUseIdentifier" use="optional" />
    </xs:complexType>

    <!-- =================================================================== -->
    <!-- Annotations -->
    <!-- =================================================================== -->

    <xs:complexType name="annotationTypeDecl">
        <!-- do not extend commonTypeDecl as we don't want to allow
            annotations within  annotation definition -->
        <xs:sequence>
            <xs:element name="doc" type="docDecl" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="parameter" type="annotationMemberDecl"
                        minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>

        <xs:attribute name="name" type="identifierName" use="required" />
        <xs:attribute name="baseType" type="identifierName" use="optional" />
    </xs:complexType>

    <xs:complexType name="annotationParameterValue">
        <xs:attribute name="name" type="identifierName" use="required" />
        <xs:attribute name="value" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name="appliedAnnotation">
        <xs:sequence>
            <xs:element name="parameter" type="annotationParameterValue"
                        minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>

        <xs:attribute name="type" type="identifierName" use="required" />
    </xs:complexType>


    <!-- ================================================================== -->
    <!-- Structures -->
    <!-- ================================================================== -->

    <xs:complexType name="structMemberDecl">
        <xs:complexContent>
            <xs:extension base="commonMemberDecl">
                <xs:attributeGroup ref="structMemberAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="structDecl">
        <xs:complexContent>
            <xs:extension base="commonTypeDecl">
                <xs:choice maxOccurs="unbounded">
                    <xs:element name="member" type="structMemberDecl"
                                minOccurs="1" />
                    <xs:element name="const" type="constDecl"
                                minOccurs="0" />
                </xs:choice>

                <xs:attributeGroup ref="structTypeAttributes" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- =================================================================== -->
    <!-- Unions -->
    <!-- =================================================================== -->
    <xs:complexType name="commonMemberDecl">
        <xs:sequence>
            <xs:element name="annotations" type="memberAnnotationList" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="name" type="identifierName" use="required" />
    </xs:complexType>

    <xs:complexType name="unionMemberDecl">
        <xs:complexContent>
            <xs:extension base="commonMemberDecl">
                <xs:attributeGroup ref="unionMemberAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="discriminatorDecl">
        <xs:sequence>
            <xs:element name="annotations" type="memberAnnotationList" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>

        <xs:attribute name="type" type="allUnionDiscriminatorTypeKind" use="required" />
        <xs:attribute name="aliasTypeName" type="identifierName"
                      use="optional" />
        <xs:attribute name="key" type="xs:boolean" use="optional"
                      default="false" />
    </xs:complexType>

    <xs:complexType name="caseDiscriminatorDecl">
        <xs:attribute name="value" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name="caseDecl">
        <xs:sequence>
            <xs:element name="caseDiscriminator" type="caseDiscriminatorDecl"
                        minOccurs="1" maxOccurs="unbounded" />
            <xs:element name="member" type="unionMemberDecl"
                        minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="defaultCaseDecl">
        <xs:sequence>
            <xs:element name="member" type="unionMemberDecl"
                        minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="baseUnionDecl">
        <xs:attribute name="type" type="identifierName" use="required" />
    </xs:complexType>

    <xs:complexType name="unionDecl">
        <xs:complexContent>
            <xs:extension base="commonTypeDecl">
                <xs:sequence>
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element name="discriminator" type="discriminatorDecl" />
                        <xs:element name="baseUnion" type="baseUnionDecl" />
                    </xs:choice>
                    <xs:element name="case" type="caseDecl"
                                minOccurs="1" maxOccurs="unbounded" />
                    <xs:element name="defaultCase" type="defaultCaseDecl"
                                minOccurs="0" maxOccurs="1" />                                
                </xs:sequence>

                <xs:attributeGroup ref="unionTypeAttributes" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <!-- =================================================================== -->
    <!-- Aliases -->
    <!-- =================================================================== -->

    <xs:complexType name="typedefDecl">
        <xs:complexContent>
            <xs:extension base="commonTypeDecl">
                <xs:attributeGroup ref="typedefElementAttributes"/>
            </xs:extension>
        </xs:complexContent>

    </xs:complexType>


    <!-- =================================================================== -->
    <!-- Enumerations -->
    <!-- =================================================================== -->

    <xs:simpleType name="enumBitBound">
        <xs:restriction base="xs:unsignedShort">
            <xs:minInclusive value="1" />
            <xs:maxInclusive value="32" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="enumeratorDecl">
        <xs:complexContent>
            <xs:extension base="commonMemberDecl">
                <xs:attribute name="value" type="xs:string" use="optional" />
                <xs:attribute name="defaultLiteral" type="xs:boolean" use="optional"
                            default="true" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="enumDecl">
        <xs:complexContent>
            <xs:extension base="commonTypeDecl">
                <xs:sequence>
                    <xs:element name="enumerator" type="enumeratorDecl"
                                minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="bitBound" type="enumBitBound" use="optional"
                              default="32" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <!-- =================================================================== -->
    <!-- Bit Masks -->
    <!-- =================================================================== -->

    <xs:simpleType name="bitmaskBitBound">
        <xs:restriction base="xs:unsignedShort">
            <xs:minInclusive value="1" />
            <xs:maxInclusive value="64" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="flagIndex">
        <xs:restriction base="xs:unsignedShort">
            <xs:minInclusive value="0" />
            <xs:maxInclusive value="63" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="flagDecl">
        <xs:complexContent>
            <xs:extension base="commonMemberDecl">
                <xs:attribute name="position" type="flagIndex" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="bitmaskDecl">
        <xs:complexContent>
            <xs:extension base="commonTypeDecl">
                <xs:sequence>
                    <xs:element name="flag" type="flagDecl" minOccurs="0"
                        maxOccurs="64" />
                </xs:sequence>
                <xs:attribute name="bitBound" type="enumBitBound" use="optional"
                        default="32" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <!-- ================================================================== -->
    <!-- Interfaces -->
    <!-- ================================================================== -->
    <xs:complexType name="operationReturnAndEceptionMemberDecl">
        <xs:attribute name="type" type="allTypeKind" use="required" />
        <xs:attribute name="nonBasicTypeName" type="identifierName"
                      use="optional" />
        <xs:attribute name="stringMaxLength" type="xs:string"
                      use="optional" />
        <xs:attribute name="sequenceMaxLength" type="xs:string"
                      use="optional" />
        <xs:attribute name="arrayDimensions" type="arrayDimensionsKind"
                      use="optional" /> 
        <xs:attribute name="mapKeyType" type="allTypeKind"
                      use="optional" />
        <xs:attribute name="mapKeyAliasTypeName"
                      type="identifierName" use="optional" />
        <xs:attribute name="mapKeyStringMaxLength" type="xs:string"
                      use="optional" />
        <xs:attribute name="mapMaxLength" type="xs:string"
                      use="optional" />
    </xs:complexType>

    <xs:complexType name="operationReturnDecl">
        <xs:complexContent>
            <xs:extension base="operationReturnAndEceptionMemberDecl">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="exceptionTypeDecl">
        <xs:complexContent>
            <xs:extension base="commonTypeDecl">
                <xs:sequence>
                    <xs:element name="member" type="exceptionMemberDecl"
                            minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                
                <xs:attribute name="baseType" type="identifierName" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="operationArgumentDirectionKind">
        <xs:restriction base="xs:string">
            <xs:enumeration value="in" />
            <xs:enumeration value="out" />
            <xs:enumeration value="inout" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="operationArgumentDecl">
        <xs:complexContent>
            <xs:extension base="commonMemberDecl">
                <xs:attributeGroup ref="operationArgumentAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="raisedExceptionDecl">
        <xs:attribute name="type" type="identifierName" use="required" />
    </xs:complexType>

    <xs:complexType name="raisesDecl">
        <xs:sequence>
            <xs:element name="exception" type="raisedExceptionDecl" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="operationArgumentList">
        <xs:sequence>
            <xs:element name="argument" type="operationArgumentDecl" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="operationDecl">
        <xs:all>
            <xs:element name="annotations" type="memberAnnotationList" 
                minOccurs="0" />            
            <xs:element name="return" type="operationReturnDecl" 
                minOccurs="0" />
            <xs:element name="raises" type="raisesDecl" 
                minOccurs="0" />                
            <xs:element name="arguments"  type="operationArgumentList"
                minOccurs="0" />
        </xs:all>
        <xs:attribute name="name" type="identifierName" use="required" />
        <xs:attribute name="extensibility" type="extensibilityKind" 
                      use="optional" />
    </xs:complexType>

    <xs:complexType name="interfaceDecl">
        <xs:complexContent>
            <xs:extension base="commonTypeDecl">
                <xs:choice maxOccurs="unbounded">
                    <xs:element name="operation" type="operationDecl" 
                        minOccurs="0"  maxOccurs="unbounded" />
                    <xs:element name="const" type="constDecl"
                                minOccurs="0" />
                </xs:choice>

                <xs:attributeGroup ref="interfaceTypeAttributes" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ================================================================== -->
    <!-- Modules -->
    <!-- ================================================================== -->

    <xs:group name="moduleElements">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="include2" type="includeDecl"
                            minOccurs="0" />
                <xs:element name="forward_dcl" type="forwardDecl"
                            minOccurs="0" />
                <xs:element name="const" type="constDecl" minOccurs="0" />
                <xs:element name="module" type="moduleDecl"
                            minOccurs="0" />
                <xs:element name="struct2" type="structDecl"
                            minOccurs="0" />
                <xs:element name="struct" type="structDecl"
                            minOccurs="0" />
                <xs:element name="union" type="unionDecl" minOccurs="0" />
                <xs:element name="annotation" type="annotationTypeDecl"
                            minOccurs="0" />
                <xs:element name="typedef" type="typedefDecl"
                            minOccurs="0" />
                <xs:element name="enum" type="enumDecl" minOccurs="0" />
                <xs:element name="bitmask" type="bitmaskDecl"
                            minOccurs="0" />
                <xs:element name="exception" type="exceptionTypeDecl"
                            minOccurs="0" />
                <xs:element name="interface" type="interfaceDecl" 
                            minOccurs="0" />
                <xs:element name="license_definition" type="licenseDefinitionDecl" 
                            minOccurs="0" />
                <xs:element name="license_use" type="licenseUseDecl" 
                            minOccurs="0" />             
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="moduleDecl">
        <xs:sequence>
            <xs:element name="include" type="includeDecl" minOccurs="0"
                        maxOccurs="unbounded" />
            <xs:group ref="moduleElements" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>

        <xs:attribute name="name" type="identifierName" use="required" />
        <xs:attribute name="autoid" type="autoIdKind" use="optional"
                      default="hash" />
    </xs:complexType>

    <xs:complexType name="typeLibrary">
        <xs:group ref="moduleElements" />
    </xs:complexType>

</xs:schema>
